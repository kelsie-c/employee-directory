{"version":3,"sources":["components/Header.js","utils/API.js","components/Employees.js","components/SearchForm.js","components/SearchResultContainer.js","App.js","index.js"],"names":["Header","axios","get","Employees","props","dob","date","dateFormat","slice","split","alt","firstName","src","icon","lastName","email","phone","address","SearchForm","className","htmlFor","onChange","e","sort","name","type","placeholder","SearchResultContainer","state","search","employees","employeesSorted","sorted","componentDidMount","API","then","res","setState","data","results","catch","err","console","log","sortEmployees","filter","first","toLowerCase","includes","last","target","value","render","label","map","employee","picture","thumbnail","cell","location","street","number","city","postcode","id","Component","App","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fc9b20ce.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Header = () => {\r\n    return (\r\n        <header>\r\n            <h1>Employee Directory</h1>\r\n            <p>Click arrows on columns to filter, or use the search bar to narrow your results.</p>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header;","import axios from \"axios\";\r\n\r\nconst RANDOM_USER_URL = \"https://randomuser.me/api/?nat=us&results=30\";\r\n\r\nexport default {\r\n    getEmployees: function() {\r\n        return axios.get(RANDOM_USER_URL);\r\n    }\r\n}","import React from \"react\";\r\n\r\nconst Employees = (props) => {\r\n    function date(date) {\r\n        let arr = date.slice(0, 10);\r\n        let dateFormat = arr.split(\"-\");\r\n        let newDate = dateFormat[1] + \"-\" + dateFormat[2] + \"-\" + dateFormat[0]\r\n        return newDate;\r\n    };\r\n\r\n    let dob = date(props.dob);\r\n\r\n    return (\r\n        <tr>\r\n            <td>\r\n                <img alt={props.firstName} src={props.icon} />\r\n            </td>\r\n\r\n            <td>\r\n                {props.firstName} {props.lastName}\r\n            </td>\r\n\r\n            <td>\r\n                {props.email}\r\n            </td>\r\n\r\n            <td>\r\n                {props.phone}\r\n            </td>\r\n\r\n            <td>\r\n                {dob}\r\n            </td>\r\n\r\n            <td>\r\n                {props.address}\r\n            </td>\r\n        </tr>\r\n    );\r\n};\r\n\r\nexport default Employees;","import React from \"react\";\r\n\r\nfunction SearchForm(props) {\r\n  return (\r\n    <form>\r\n      <div className=\"form-group\">\r\n        <label htmlFor=\"search\">Search:</label>\r\n        <input\r\n          onChange={(e) => props.sort(e)}\r\n          name=\"search\"\r\n          type=\"text\"\r\n          className=\"form-control\"\r\n          placeholder=\"Search For an Employee\"\r\n        />\r\n        {/* <br />\r\n        <button onClick={props.handleFormSubmit} className=\"btn btn-primary\">\r\n          Search\r\n        </button> */}\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default SearchForm;","import React, { Component } from \"react\";\r\nimport API from \"../utils/API\";\r\nimport Employees from \"./Employees\";\r\nimport SearchForm from \"./SearchForm\";\r\n\r\nclass SearchResultContainer extends Component {\r\n    state = {\r\n        search: \"\",\r\n        employees: [],\r\n        employeesSorted: [],\r\n        sorted: false,\r\n    };\r\n\r\n    componentDidMount = () => {\r\n    API.getEmployees()\r\n        .then((res) => { this.setState({ employees: res.data.results }) })\r\n        .catch(err => console.log(err));\r\n    };\r\n\r\n    sortEmployees = () => {\r\n        let { employees, search } = this.state;\r\n        let employeesSorted = employees.filter((sorted) => {\r\n            return (\r\n                sorted.name.first.toLowerCase().includes(search.toLowerCase()) ||\r\n                sorted.name.last.toLowerCase().includes(search.toLowerCase()) ||\r\n                sorted.email.toLowerCase().includes(search.toLowerCase())\r\n            );\r\n        });\r\n        this.setState({ employeesSorted });\r\n    };\r\n\r\n    sort = (e) => {\r\n        this.setState({ search: e.target.value }, () => {\r\n            this.sortEmployees();\r\n            this.setState({ sorted: true });\r\n        });\r\n    };\r\n\r\n    render = () => {\r\n        return (\r\n            <>\r\n                <SearchForm name=\"search\" sort={this.sort} label=\"Search\" />\r\n                <table className=\"table table-light table-striped table-hover table-bordered table-condensed\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Image</th>\r\n                            <th>Name</th>\r\n                            <th>Email</th>\r\n                            <th>Phone #</th>\r\n                            <th>Date of Birth</th>\r\n                            <th>Address</th>                            \r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {!this.state.sorted\r\n                            ? this.state.employees.map((employee) => (\r\n                                <Employees\r\n                                    key={employee.id.value}\r\n                                    icon={employee.picture.thumbnail}\r\n                                    firstName={employee.name.first}\r\n                                    lastName={employee.name.last}\r\n                                    email={employee.email}\r\n                                    phone={employee.cell}\r\n                                    dob={employee.dob.date}\r\n                                    address={employee.location.street.number + \" \" + employee.location.street.name + \", \" + employee.location.city + \", \" + employee.location.state + \" \" + employee.location.postcode}\r\n                                />\r\n                            ))\r\n                            : this.state.employeesSorted.map((employee) => (\r\n                                <Employees\r\n                                    key={employee.id.value}\r\n                                    icon={employee.picture.thumbnail}\r\n                                    firstName={employee.name.first}\r\n                                    lastName={employee.name.last}\r\n                                    email={employee.email}\r\n                                    phone={employee.cell}\r\n                                    dob={employee.dob.date}\r\n                                    address={employee.location.street.number + \" \" + employee.location.street.name + \", \" + employee.location.city + \", \" + employee.location.state + \" \" + employee.location.postcode}\r\n                                />\r\n                            ))\r\n                        }\r\n                    </tbody>\r\n                </table>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SearchResultContainer;","import React from \"react\";\nimport Header from \"./components/Header\";\nimport SearchResultContainer from \"./components/SearchResultContainer\";\nimport './App.css';\n\nfunction App() {\n  return (\n    <>\n      <Header />\n      <SearchResultContainer />\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}